name: Deploy Jekyll to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages-deploy-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (with cache workaround)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Cache será ignorado se não houver lock file
          cache: ${{ github.workspace }}/package-lock.json && 'npm' || ''

      - name: Create package.json if missing
        id: create-package
        run: |
          if [ ! -f package.json ]; then
            npm init -y
            echo "package_created=true" >> $GITHUB_OUTPUT
          else
            echo "package_created=false" >> $GITHUB_OUTPUT
          fi

      - name: Create lock file if missing
        if: steps.create-package.outputs.package_created == 'true' || !files.exists('package-lock.json')
        run: |
          if [ ! -f package-lock.json ]; then
            npm install --package-lock-only
          fi

      - name: Install dependencies
        run: |
          npm install --no-audit --no-fund
          npm install --no-audit --no-fund --legacy-peer-deps || npm install --no-audit --no-fund --force

      - name: Generate metadata
        run: npm start
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit metadata changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add files_metadata.json
          git diff --cached --quiet || git commit -m "Auto-update metadata [skip ci]"
          git push

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Build with Jekyll
        run: |
          bundle install
          bundle exec jekyll build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
